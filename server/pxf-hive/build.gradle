apply plugin: "java-library"

jar {
    enabled = true
}

dependencies {
    /*******************************
     * API Dependencies
     *******************************/

    /*******************************
     * Compile Only Dependencies
     *******************************/

    compileOnly("org.apache.hadoop:hadoop-annotations")              { transitive = false }

    /*******************************
     * Implementation Dependencies
     *******************************/

    implementation(project(':pxf-api'))
    implementation(project(':pxf-hdfs'))
    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    implementation("com.google.guava:guava")
    implementation("commons-codec:commons-codec")
    implementation("commons-lang:commons-lang")
    implementation("io.arenadata.hive:hive-exec:${hiveVersion}:core")  { transitive = false }
    implementation("io.arenadata.hive:hive-metastore")                 { transitive = false }
    implementation("io.arenadata.hive:hive-serde")                     { transitive = false }
    implementation("com.esotericsoftware:kryo")                        { transitive = false }

    /*******************************
     * Transitive dependencies for hive-exec-core. Instead of bundling
     * hive-exec, hive-exec-core is used to avoid conflict with other
     * dependencies included in hive-exec (i.e Parquet) which were causing
     * other tests to fail.
     *******************************/

    implementation("io.arenadata.hive:hive-common")                  { transitive = false }
    implementation("io.arenadata.hive.shims:hive-shims-common")      { transitive = false }
    implementation("io.arenadata.hive.shims:hive-shims-0.23")        { transitive = false }
    implementation("org.apache.commons:commons-lang3")               { transitive = false }
    implementation("org.apache.hive:hive-storage-api")               { transitive = false }
    implementation("org.apache.orc:orc-core")                        { transitive = false }
    implementation("io.airlift:aircompressor")                       { transitive = false }
    implementation("joda-time:joda-time")                            { transitive = false }
    implementation("org.objenesis:objenesis")                        { transitive = false }
    implementation("com.esotericsoftware:kryo")                      { transitive = false }
    implementation("com.esotericsoftware:minlog")                    { transitive = false }
    implementation("com.esotericsoftware:reflectasm")                { transitive = false }
    implementation("org.apache.thrift:libfb303")                     { transitive = false }
    implementation("org.apache.thrift:libthrift")                    { transitive = false }
    implementation("org.antlr:antlr-runtime")                        { transitive = false }
    implementation("org.datanucleus:datanucleus-api-jdo")            { transitive = false }
    implementation("org.datanucleus:datanucleus-core")               { transitive = false }
    implementation("org.xerial.snappy:snappy-java")                  { transitive = false }
    implementation("javax.jdo:jdo-api")                              { transitive = false }
    implementation("org.codehaus.jackson:jackson-core-asl")          { transitive = false }
    implementation("org.codehaus.jackson:jackson-mapper-asl")        { transitive = false }
    implementation("org.jodd:jodd-core")                             { transitive = false }
    implementation("javax.servlet:javax.servlet-api:4.0.1")          { transitive = false }

    // transitive dependency for reading Hive tables with SerDe 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
    implementation("net.sf.opencsv:opencsv")                         { transitive = false }

    // transitive dependency required by MapR
    implementation("org.json:json:20090211")                         { transitive = false }

    /*******************************
     * Test Dependencies
     *******************************/

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.apache.hadoop.thirdparty:hadoop-shaded-guava")

    // https://projectlombok.org
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
}

test {
    jvmArgs '--add-opens=java.base/java.net=ALL-UNNAMED'
    useJUnitPlatform()
}
